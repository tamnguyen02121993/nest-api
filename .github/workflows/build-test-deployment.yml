name: Build - Test - Deployment
run-name: ${{github.actor}} trigger build
on: 
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Install Nodejs
      #   uses: actions/setup-node@v4
      #   with:
      #       node-version: '20'
      # - name: Install pnpm
      #   run: |
      #       npm install -g pnpm &&
      #       pnpm install --frozen-lockfile
      - name: Pull and build
        uses: ./.github/actions/setup-action
      - name: Run build
        run: pnpm run build
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
            node-version: '20'
      - name: Install pnpm
        run: |
            npm install -g pnpm &&
            pnpm install --frozen-lockfile
      - name: Run test
        run: |
          pnpm run test:cov
  deploy:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: tamnguyenh/nest-api

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
      

